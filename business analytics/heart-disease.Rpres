
```{r cache output, include=FALSE}
opts_chunk$set(cache=TRUE)
```

Modeling Heart Disease
========================================================
author: Jim Reilly
date: 3-3-2019
autosize: true

UCI Heart Disease Dataset
========================================================
[Heart Disease dataset on UCI](https://www.kaggle.com/ronitf/heart-disease-uci/home)

[Original UCI Archive](https://archive.ics.uci.edu/ml/datasets/heart+Disease)

Dataset of 13 attributes and 1 label of heart disease in patients, a subset of the greater "Cleveland" heart disease database being used by ML researchers. 

The goal is to identify the presence of heart disease in patients based on the available predictors.

Available Predictors
========================================================

- age: int 
- sex: 0 (female) 1 (male) 
- cp: 0-4 encoding for type of chest pain
- trestbps: int resting blood pressure
- chol: int cholestoral in mg/dl
- fbs: boolean fasting blood sugar >120 mg/dl
- restecg: 0,1,2 encoding for resting ecg result
- thalach: int for max heart rate from exercise

***

- exang: boolean excercise induced angina 
- oldpeak: double ST depression during exercise
- slope: 0,1,2 encoding for slope of ST segment
- ca: 0-4 number of major vessels colored
- thal: 3-level factor for defects
- Label: 0 (no-disease) 1 (disease)

Quantitative Summary
========================================================

```{r libraries, include = FALSE}
library(ggplot2)
library(dplyr)
library(caret)
```

```{r load the data} 
heart <- read.csv(file="data/heart.csv",fileEncoding="UTF-8-BOM")
heart$target <- factor(heart$target)
```

```{r summary of the data}
dim(heart)
heart %>% group_by(target) %>% summarise(patients = length(target))
```

A View at a Record
========================================================

```{r head of the dataset}
head(heart[1:7], n = 3)
head(heart[8:14], n = 3)
```

Hypothesis
========================================================

## The presence of heart disease can be predicted with these 13 variables

Variable Visualization
========================================================

```{r chest pain, echo = FALSE}
cpPlot <- ggplot(data = heart, aes(x = factor(cp)))
cpPlot + geom_bar(aes(fill = target)) + xlab('Chest Pain Type') +labs(title = 'Patients grouped by chest pain type and presence of heart disease')
```

***

```{r thalach, echo = FALSE}
thalachPlot <- ggplot(data = heart, aes(x = target, y = thalach)) 
thalachPlot + geom_boxplot() + labs(title = 'Maximum heart rate achieved through excercise grouped by heart disease') +ylab('Heart Rate (bpm)')
```


Variable Visualization
========================================================

```{r excercise angina, echo = FALSE}
exangPlot <- ggplot(data = heart, aes(x = factor(exang)))
exangPlot + geom_bar(aes(fill = target)) + xlab('Excercise induced angina') +labs(title = 'Patient experiences excercise induced angina grouped by heart disease')
```

***

```{r old peak, echo = FALSE}
oldpeakPlot <- ggplot(data = heart, aes(x = target, y = oldpeak)) 
oldpeakPlot + geom_boxplot() + labs(title = 'ST depression from excercise grouped by heart disease')
```

Variable Visualization
========================================================

```{r ca, echo = FALSE}
caPlot <- ggplot(data = heart, aes(x = factor(ca)))
caPlot + geom_bar(aes(fill = target)) + labs(title = 'Number of major vessels colored by flourosopy grouped by heart disease')
```

***

```{r sex, echo = FALSE}
sexPlot <- ggplot(data = heart, aes(x = factor(sex)))
sexPlot + geom_bar(aes(fill = target)) + xlab('Sex') +labs(title = 'Patients grouped by sex and presence of heart disease')
```

Model Setup
========================================================

```{r train and validation split}
set.seed(3456)

trainIndex <- createDataPartition(heart$target, p = 0.8, list = FALSE)

heart.train <- heart[trainIndex, ]
heart.valid <- heart[-trainIndex, ]
```

Logistic Regression Model
========================================================

```{r step selection, echo = FALSE}
heart.glm <- glm(target ~ 1, data = heart.train, family = "binomial")
heart.glm <- step(heart.glm, scope = ~ sex + cp + fbs + restecg + thalach + exang + oldpeak + slope + ca + thal, direction = "forward", steps = 5)
```


Model Summary
========================================================

```{r}
summary(heart.glm)
```

Performance (Test fit)
========================================================

```{r performance test}
heart.predictions <- predict(heart.glm, heart.train, type = "response")
confusionMatrix(factor(as.numeric(heart.predictions > 0.5)), heart.train$target)
```


Performance (Validation fit)
========================================================

```{r performance valid}
heart.predictions <- predict(heart.glm, heart.valid, type = "response")
confusionMatrix(factor(as.numeric(heart.predictions > 0.5)), heart.valid$target)
```

Conclusion
========================================================

Outcomes
  - We can effectively model heart disease with 80% accuracy
  - only 5 features were required out of a provided 13
  - Only simple methods required in modeling

Suggested improvements
 - Try a non-linear model
 - Lower threshold if cost of false positive is +++
 - Boost on missclassification
 


